name: Rust CI

on:
  push:
    branches: [ main, master ]
    paths:
      - 'rust-node/**'
      - 'rust-common/**'
      - 'rust-macros/**'
      - '.github/workflows/rust-ci.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'rust-node/**'
      - 'rust-common/**'
      - 'rust-macros/**'
      - '.github/workflows/rust-ci.yml'

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"
  # Configure git to use the token for all GitHub URLs
  GIT_CONFIG_COUNT: 1
  GIT_CONFIG_KEY_0: "url.https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/.insteadOf"
  GIT_CONFIG_VALUE_0: "git@github.com:"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: 'true'
          # Only fetch the submodules we need
          repository: runar-labs/rust-mono
          # Convert SSH URLs to HTTPS
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          # Force checkout with lfs
          lfs: true
          # This will make the checkout use the token for all submodules
          persist-credentials: true
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo registry and target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check code format
        run: |
          cd rust-node
          cargo fmt --all -- --check
      
      - name: Check with clippy
        run: |
          cd rust-node
          cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: 'true'
          # Only fetch the submodules we need
          repository: runar-labs/rust-mono
          # Convert SSH URLs to HTTPS
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          # Force checkout with lfs
          lfs: true
          # This will make the checkout use the token for all submodules
          persist-credentials: true
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo registry and target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Run tests
        run: |
          cd rust-node
          cargo test --all-features

  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: 'true'
          # Only fetch the submodules we need
          repository: runar-labs/rust-mono
          # Convert SSH URLs to HTTPS
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          # Force checkout with lfs
          lfs: true
          # This will make the checkout use the token for all submodules
          persist-credentials: true
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo registry and target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Build
        run: |
          cd rust-node
          cargo build --verbose
      
      - name: Build release
        run: |
          cd rust-node
          cargo build --release --verbose

  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: 'true'
          # Only fetch the submodules we need
          repository: runar-labs/rust-mono
          # Convert SSH URLs to HTTPS
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          # Force checkout with lfs
          lfs: true
          # This will make the checkout use the token for all submodules
          persist-credentials: true
      
      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
      
      - name: Cache cargo registry and target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-nightly-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Run benchmarks
        run: |
          cd rust-node
          pwd
          cargo bench --all-features --no-run
          cargo bench --all-features -- --list | tail -n +2 | head -n -1 | xargs -I{} bash -c "echo 'Running benchmark: {}' && cargo bench --all-features -- '{}'"
